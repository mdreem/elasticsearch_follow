# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6.1
      - image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.0.0
        environment:
          - ES_HOST=http://localhost:9200
          - node.name=test
          - cluster.initial_master_nodes=test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade setuptools wheel
            pip install -r requirements.txt
            pip install pytest

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: wait for elasticsearch to start
          command: |
            tests/wait_for_es.sh

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py pytest

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports
          destination: test-reports

      - run:
          name: push coverage to coveralls
          command: |
            . venv/bin/activate
            coveralls --service=circleci

      - run:
          name: build dist
          command: |
            . venv/bin/activate
            python setup.py sdist
            python setup.py bdist_wheel

      - store_artifacts:
          path: dist
          destination: dist

      - persist_to_workspace:
          root: ~/repo
          paths:
            - dist/*

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(ls ~/repo/dist/* | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+")
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete v${VERSION} dist/*

  publish-pypi-release:
    docker:
      - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $$PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: "Publish Release on PyPi"
          command: |
            . venv/bin/activate
            twine upload ~/repo/dist/*

workflows:
  version: 2
  workflow:
    jobs:
    - build
    - publish-github-release:
        requires:
          - build
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
    - publish-pypi-release:
        requires:
          - build
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
